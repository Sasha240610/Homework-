###################################
# Завдання 1.
# У вас є список my_list із значеннями типу int.
# Роздрукувати значення, які більше 100.
# Завдання виконати за допомогою циклу for.

my_list = [50, 120, 200, 30, 400, 95, 101]
for value in my_list:
    if value > 100:
        print(value)

###################################
# Завдання 2.
# У вас є список my_list зі значеннями типу int і порожній список my_results.
# Додати до my_results ті значення, які більше 100.
# Роздрукувати список my_results.
# Завдання виконати за допомогою циклу for.

my_list = [50, 120, 200, 30, 400, 95, 101]
my_results = []
for value in my_list:
    if value > 100:
        my_results.append(value)
print(my_results)

###################################
# Завдання 3.
# У вас є список my_list із значеннями типу str.
# Створити новий список, до якого помістити елементи з my_list за таким правилом:
# Якщо строка стоїть на непарному місці my_list, то її замінити на обернену строку (Наприклад "qwe" на "ewq").
# Якщо на парному – залишити без зміни.
# Завдання зробити за допомогою циклу for та функції enumerate.

my_list = ["apple", "banana", "cherry", "date", "fig", "grape"]
new_list = []
for index, value in enumerate(my_list):
    if index % 2 == 0:  # непарне місце (індекс починається з 0)
        new_list.append(value[::-1])
    else:
        new_list.append(value)
print(new_list)

###################################
# Завдання 4.
# У вас є рядок my_string = '0123456789'.
# Згенерувати цілі числа (тип int) від 0 до 99 і помістити в список.
# Завдання потрібно виконати ТІЛЬКИ через цикл у циклі (Див. Приклад вище) і зведення типів.

my_string = '0123456789'
result = []
for symb_1 in my_string:
    for symb_2 in my_string:
        result.append(int(symb_1 + symb_2))
print(result)
